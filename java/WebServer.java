import java.io.InputStream;import java.io.OutputStream;import java.io.PrintWriter;import java.net.InetSocketAddress;import java.net.ServerSocket;import java.net.Socket;import java.util.HashMap;import java.util.Map;import java.util.function.Function;import java.util.regex.Matcher;import java.util.regex.Pattern;class WebServer {	public static Map<String, String> reqMap = new HashMap();	public static Map getRequest(Object obj) {		if (obj != null) {			if (obj.toString().length() > 10) {				//path				String path[] = obj.toString().split("\n")[0].substring(4).split(" ")[0].split("\\?");				if (path.length > 0) {					reqMap.put("path", path[0]);				} else {					reqMap.put("path", "");				}				//params				if (path.length > 1) {					reqMap.put("query", path[1]);				} else {					reqMap.put("query", "");				}			}		}		return reqMap;	}	public static String getResponse(String json) {		String out = "HTTP/1.1 200 OK\n";		out += "Server: Apache-Coyote/1.1\n";		out += "Content-Type: application/json; charset=utf-8\n";		out += "Content-Length: " + json.getBytes().length + "\n";		out += "Date: Fri, 11 May 2012 07:51:39 GMT\n";		out += "Connection: close\n";		out += "\n";		out += json;		return out;	}	public static String getParameter(String name) {		Pattern p = Pattern.compile(name + "=([^&]*)(&|$)");		Matcher m = p.matcher(reqMap.get("query"));		while (m.find()) {			return m.group(1);		}		return "null";	}	public static void server(final Function<Map, String> handler, int port) throws Exception {		ServerSocket ss = new ServerSocket();		ss.bind(new InetSocketAddress(port));		System.out.println("Listener on:" + port);		while (true) {			final Socket s = ss.accept();			InputStream inputStream = s.getInputStream();			byte[] buf = new byte[1024];			int len = inputStream.read(buf);			String text = new String(buf, 0, len + 1);			if (text == null || text.length() == 0) {				s.shutdownOutput();				continue;			}			String returnStr = (String) handler.apply(getRequest(text));			OutputStream outputStream = s.getOutputStream();			PrintWriter pw = new PrintWriter(outputStream);			pw.println(getResponse(returnStr));			pw.flush();			s.shutdownOutput();		}	}	public static void main(String[] args) throws Exception {		server((req) -> {			System.out.println(req);			System.out.println("--------------");			String name = getParameter("name");			System.out.println(name);			return "{\"code\":3002,\"message\":\"操作成功\",\"success\":true,\"data\":\"ok\"}";		}, 11112);	}}